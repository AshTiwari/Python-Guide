PRINT

Allowed Cases:

  print(" Single inverted comma (' ') is allowed between double inverted comma.")
  print('  Double inverted comma ("  ") is allowed in single inverted comma')
  
   print(' Can put forwardlash before the ending single inverted comma /')
   print(' Can put forwardlash before the ending double inverted comma /')
   
   print(' Can put blackslash before \ between the  single inverted comma ')
   print(' Can put blackslash before \ between the  double inverted comma')


Not allowed:    

   !!!GIVES SEMANTIC ERROR!!!
  
   print(" double inverted comma  ("  ") is not allowed between double inverted comma  .")
          O/P: double inverted comma  () is not allowed between double inverted comma  .
         
   print(' single inverted comma  ('  ') is not allowed in single inverted comma')
          O/P: single inverted comma  () is not allowed in single inverted comma
   
   
   !!!GIVES SYNTAX ERROR!!!
  
   print(' Can't put blackslash before the ending single inverted comma \')                    
        #SyntaxError: EOL while scanning string literal
   print(' Can't put blackslash before the ending double inverted comma \')                    
        #SyntaxError: EOL while scanning string literal
   
   print(" double inverted comma  (" STRING ") is not allowed between double inverted comma  .")
        #SyntaxError: invalid syntax 
   print(' single inverted comma  (' STRING  ') is not allowed in single inverted comma')
        #SyntaxError: invalid syntax
   
Using ESCAPE SEQUENCE:


  Escape Sequence	Description	Example	Output


Escape              Description	                  Example	                      Output
Sequence	    
\\	           Prints Backslash	                 print("C:\New Folder\\")	      C:\New Folder\        
                                                 print("C:\New Folder \\")      C:\New Folder\                   

\`	           Prints single-quote	             print("Arjun\'s Book")	        Arjun's Book
               

\"	           Pirnts double quote	             print("\"PYTHON\"")	          "PYTHON"
               when placed in DOUBLE QUOTE

\a	           ASCII bell makes ringing          print "\a"	                       N/A
               the bell alert sounds 
               ( eg. xterm )	


\b	           ASCII backspace                   print "ab" + "\b" + "c"	          ac
               removes previous character	


\f	           ASCII formfeed ( FF )	           print "hello\fworld"	             helloworld         # !!!!!verify!!!!!!
                                                                                     

\n	           ASCII linefeed ( LF )	           print "hello\nworld"	            hello
                                                                                  world

\N{name}	     Prints a character from the       print u"\N{DAGGER}"               	†                   # link to the unicode database character names
               Unicode database	


\r	           ASCII carriage return (CR).       	print "123456\rXX_XX"            XX_XX6                  # !!!!!verify!!!!!!
               Moves all characters after ( CR )
               the the beginning of the line
               while overriding same number of 
               characters moved.	


\t           	horizontal tab 
                Gives space	                    print "Escape\tSequence "	    Escape    Sequence



\uxxxx	      Prints 16-bit hex value             print u"\u041b"	               Л                         # !!!!!verify!!!!!!              
              Unicode character	


\Uxxxxxxxx	  Prints 32-bit hex value
              Unicode character	                   print u"\U000001a9"          	Ʃ                         # !!!!!verify!!!!!!


\ooo	        Prints character based on its 
               octal value                        print "\043"	                  #                        # !!!!!verify!!!!!!

\xhh	        Prints character based on its       print "\x23"                  	#                        # !!!!!verify!!!!!!   
              hex value	


Credits: LinuxConfig.org <https://linuxconfig.org/list-of-python-escape-sequence-characters-with-examples>








